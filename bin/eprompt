#!/usr/local/rvm/rubies/ruby-2.1.4/bin/ruby
$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require 'enhanced_prompt'
require 'optparse'

$options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: example.rb [options]"

  opts.on("--debug", "debug") do
    $options[:debug] = true
  end
  opts.on("--tokens", "show tokens") do
    $options[:tokens] = true
  end
  opts.on("--colors", "show predefined colors") do
    $options[:colors] = true
  end
  opts.on("-h","--help", "show help") do
    $options[:help] = true
  end
end.parse!

code=ARGV[0]

if $options[:help] then
  EnhancedPrompt::Prompt.instance_methods(false).sort.each do |met|
    name = met.to_s
    print EnhancedPrompt.run("%Q|#{name}|.c(:red)+' => '+ #{met} + %|\n|" )
  end
elsif $options[:colors] && $options[:tokens].nil? &&code.nil? then
  EnhancedPrompt::StringExtension::ColorTable.color_table.each_key{|color|
    print EnhancedPrompt.run{":"+color.to_s+" => "+ "      ".bg(color)+"\n"}
  }
else
  code ||= 'default'
  if $options[:debug]
   p EnhancedPrompt.run(code)
  end
  print EnhancedPrompt.run(code)
end

=begin
export PROMPT_COMMAND='/home/sato/work/enhanced_prompt/bin/eprompt "default"'
export PS1=''
=end